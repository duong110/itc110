1. Why are functions advantageous to have in your programs?
They make your code shorter, more efficient and easier to debug

2. When does the code in a function execute: when the function is defined or when the function is called?
When the function is called.

3. What statement creates a function?
 A def statement creates a function. 
 
4. What is the difference between a function and a function call? 
A function call is what moves the program execution into the function, and the function call evaluates to the functionâ€™s return value. 

5. How many global scopes are there in a Python program? How many local scopes? 
There is one global scope in a Python program.A local scope is dependent on whenever a func- tion is called.

6. What happens to variables in a local scope when the function call returns?
The variables are destroyed.

7. What is a return value? Can a return value be part of an expression? 
The return value is what is returned from a function as a
result of a function call. A return value can be used as part of an expression.

8. If a function does not have a return statement, what is the return value of a call to that function? 
It returns as None

9. How can you force a variable in a function to refer to the global variable?
You can use a global staement     

10. What is the data type of None?
NoneType 

11. What does the import areallyourpetsnamederic statement do?
it imports the module named areallyourpetsnamederic

12. If you had a function named bacon() in a module named spam, how would you call it after importing spam? 
spam.bacon()

13. How can you prevent a program from crashing when it gets an error? 
You use try clause, and put the error its
spitting out into the except clause.

14. What goes in the try clause? What goes in the except clause?
The code you want to test is causing the crash goes
into the try clause.The code that executes if an error happens goes in the except clause. 
